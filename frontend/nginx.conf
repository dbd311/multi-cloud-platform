worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 60;

    gzip on;

    upstream backend {
		# backend-service is the Kubernetes backend service but it could be a hostname, DNS or service name in Docker.
		# 5000: The port on which the backend service is listening (like a Flask or FastAPI app running on port 5000).    
        server backend-service:5000; 
    }

    server {
        listen 80;
        server_name _;
		#  Nginx forwards requests for /api/ to the upstream group named backend, so the requests are routed to backend-service:5000.
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri /index.html;
        }
    }
}
